{"version":3,"sources":["context/PostContext.js","components/FakeTweetGenerator.js","components/TweetBox.js","components/TweetBuyBox.js","components/TweetOffers.js","App.js","reportWebVitals.js","index.js"],"names":["PostContext","createContext","PostProvider","children","useState","imgUrl","name","mention","isCertified","postText","time","date","likeAmount","commentAmount","data","setData","Provider","value","usePostContext","useContext","FakeTweetGenerator","className","onChange","e","target","defaultValue","TweetBox","src","alt","TweetBuyBox","onclick","offer","setOffer","type","onClick","TweetOffers","user","offers","setOffers","newOffer","parseInt","document","querySelector","sort","first","second","map","item","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05c14f4c.chunk.js","sourcesContent":["import { useState, createContext, useContext } from \"react\";\r\n\r\nconst PostContext = createContext();\r\n\r\nexport const PostProvider = ({ children }) => {\r\n\r\n  const [data, setData] = useState({\r\n    imgUrl:\r\n      \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2380&amp;q=80\",\r\n    name: \"Adem\",\r\n    mention: \"@ademalkan\",\r\n    isCertified: \"yes\",\r\n    postText: \"just setting up my twttr\",\r\n    time: \"14:47 PM\",\r\n    date: \"Nov 11, 2021\",\r\n    likeAmount: \"145.1K\",\r\n    commentAmount: \"124.4K\",\r\n  });\r\n  return (\r\n    <PostContext.Provider value={{ data, setData }}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePostContext = () => useContext(PostContext);\r\n","import {usePostContext} from \"../context/PostContext\"\r\n\r\nfunction FakeTweetGenerator() {\r\n  const {data,setData} = usePostContext();\r\n\r\n  return (\r\n    <div className=\"fakeTweetGenerator\">\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>IMG URL</h4>\r\n        <input onChange={(e) => setData({...data,imgUrl: e.target.value})} defaultValue={data.imgUrl} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Name</h4>\r\n        <input onChange={(e) => setData({...data,name:e.target.value})} defaultValue={data.name} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Mention</h4>\r\n        <input onChange={(e) => setData({...data,mention:e.target.value})} defaultValue={data.mention} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Is Certified</h4>\r\n        <div>( yes or no )</div>\r\n        <input onChange={(e) => setData({...data,isCertified:e.target.value})} defaultValue={data.isCertified} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Post Text</h4>\r\n        <input onChange={(e) => setData({...data,postText:e.target.value})} defaultValue={data.postText} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Time</h4>\r\n        <input onChange={(e) => setData({...data,time:e.target.value})} defaultValue={data.time} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Date</h4>\r\n        <input onChange={(e) => setData({...data,date:e.target.value})} defaultValue={data.date} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Like Amount</h4>\r\n        <input onChange={(e) => setData({...data,likeAmount:e.target.value})} defaultValue={data.likeAmount} />\r\n      </div>\r\n      <div className=\"fakeTweetGeneratorOptions\">\r\n        <h4>Comment Amount</h4>\r\n        <input onChange={(e) => setData({...data,commentAmount:e.target.value})} defaultValue={data.commentAmount} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FakeTweetGenerator;\r\n","import {usePostContext} from '../context/PostContext';\r\n\r\nfunction TweetBox() {\r\n    const {data} = usePostContext();\r\n    return (\r\n        <div className=\"tweetBox\">\r\n        <div className=\"tweetHead\">\r\n          <div className=\"tweetUserProfile\">\r\n            <img src={data.imgUrl} alt=\"User\"/>\r\n            <div className=\"tweetUserNameBox\">\r\n              <div className=\"tweetUserName\">\r\n                {data.name} {data.isCertified === \"yes\" ? <i className=\"fas fa-badge-check\"></i> : null}\r\n              </div>\r\n              <div className=\"tweetUserNickName\">{data.mention}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"tweetLogo\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/tr/f/f2/Twitter-bird-light-bgs.png\" alt=\"twitter\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"tweetBody\">\r\n          <div className=\"tweetText\">\r\n            <p>{data.postText}</p>\r\n          </div>\r\n          <div className=\"tweetDateInformation\">\r\n            <div className=\"tweetClock\">{data.time}</div>\r\n            <div className=\"tweetDate\">{data.date}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"tweetFooter\">\r\n          <div className=\"tweetLike\">\r\n            <i className=\"fal fa-heart\"></i> {data.likeAmount}\r\n          </div>\r\n          <div className=\"tweetComment\">\r\n            <i className=\"fal fa-comment\"></i> {data.commentAmount}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TweetBox\r\n","import { useState } from \"react\";\r\n\r\nfunction TweetBuyBox({onclick}) {\r\n  const [offer, setOffer] = useState();\r\n  return (\r\n    <div className=\"tweetBuyBox \">\r\n      <div className=\"tweetBuyBoxHeader\">\r\n        <h2>Want to buy this tweet?</h2>\r\n        {offer > 0 ? <p>Your offer is ${offer}</p> : <p>Please your offer</p>}\r\n      </div>\r\n      <div className=\"tweetBuyBoxContent\">\r\n        <input name=\"numberBox\" type=\"number\" onChange={e => setOffer(e.target.value)} />\r\n        <input type=\"button\" value=\"OFFER\" onClick={onclick} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetBuyBox;\r\n","import TweetBuyBox from \"./TweetBuyBox\";\r\nimport { usePostContext } from \"../context/PostContext\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nfunction TweetOffers() {\r\n  const { data } = usePostContext();\r\n\r\n  const [offers, setOffers] = useState([\r\n    { user: \"@john\", offer: 500000 },\r\n    { user: \"@cybill\", offer: 480000 },\r\n    { user: \"@kipling\", offer: 450000 },\r\n    { user: \"@evaline\", offer: 420000 },\r\n    { user: \"@kimmy\", offer: 400000 },\r\n    { user: \"@frankie\", offer: 390000 },\r\n    { user: \"@stacia\", offer: 360000 },\r\n    { user: \"@denise\", offer: 320000 },\r\n    { user: \"@mindy\", offer: 260000 },\r\n  ]);\r\n\r\n  const newOfferHandler = () => {\r\n    const newOffer = parseInt(document.querySelector('[name=\"numberBox\"]').value);\r\n    setOffers((offers) =>\r\n      [...offers, { user: data.name, offer: newOffer }].sort((first, second) => second.offer - first.offer)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TweetBuyBox onclick={newOfferHandler} />\r\n      <div className=\"tweetBuyBoxHeader\">\r\n        <h2> All Offers </h2>\r\n        <ul className=\"offerList\">\r\n          {offers.map((item, key) => (\r\n            <li key={key}>\r\n              <span className=\"mention\"> {item.user} </span>${item.offer}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetOffers;\r\n","import \"./App.css\";\nimport FakeTweetGenerator from \"./components/FakeTweetGenerator\";\nimport TweetBox from \"./components/TweetBox\";\nimport TweetOffers from \"./components/TweetOffers\";\nimport { PostProvider } from \"./context/PostContext\";\n\nfunction App() {\n  \n  return (\n    <>\n      <div className=\"container\">\n        <PostProvider>\n          <FakeTweetGenerator />\n          <div className=\"fakeTweet\">\n            <TweetBox />\n            <TweetOffers />\n          </div>\n          </PostProvider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}